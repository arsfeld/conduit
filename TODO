= TODO List =
This page is not meant as a substitute for the [/roadmap?show=all Roadmap].

== Goals for v0.2 ==
 * Save application settings to an xml file when the program is exited.
 * Recursive folder support for the file dataprovider (perhaps this should be split into seperate file and folder dataproviders).
 * Solid file->file sync. Look at the file size and mtime. DOnt have a UI for conflict resolution yet, but it shiuld be smart
 * Application level preferences
 * Per-conduit preferences

== Random Goals ==
 * A UI for conflict resolution. Perhaps a listview with a custom cell renderer, shown at the bottom of the main window hidden in an Gtk.Expander until a conflit occurs. The column on the left shows the source data, the column on the right is the sink data. When you click on the middle column (custom cell render) the arrow changes direction. See below
{{{
_______________________________
|           |     |           |
| filename1 | --> | filename2 |
|___________|_____|___________|
}}}
 * Change the sync state machine, and the dataproviders over from using an iterator in get() to using get(x) where x is a number from 0 -> get_num_items(). This will hopefully allow conflict resolution
 * Advertise local sources/sinks over the local network using avahi so that two computers may be synchronized directly. Work out a UI for this, and how it will fit in the canvas.
 * Increase the canvas height when it gets full.
 * Change over to using the new goo_canvas_get_item_view_at and itemview->item hash table to replace my custom function to determing if a dataprovider was dropped onto an existing conduit or not
 * Make debs and .desktop file
 * Auto tools build based on the deskbar code. Add a defs.py and move some of the CONSTANTS out of Conduit.__init__.py into defs, them import them from there into start_conduit
 * Clean up most of the dataproviders.
 * New dataproviders (some are listed in the roadmap)
 * GConf (application setting) dataproviders
   * Desktop wallpaper
   * Evolution email accounts
   * etc
 * Improved backpackit.com support
 * Support [http://tw.apinc.org/weblog/2006/08/26 Mathusalem]
 * [https://hive.bountysource.com/ UbuntuCenter] support
 * Upgrade trac and add a mailing list
 * [http://blogs.gnome.org/view/nigeltao/2006/07/30/0 NewStuffManager] support
 * Propose for GNOME 2.20 :-)
 * Rsync support based on librsync and [http://duplicity.nongnu.org/index.html duplicity]
 * Testing framework
   * Automated unit testing of datatypes, dataproviders.
   * Preset settings.xml files and testing the application over dbus