/* -*- Mode: C; c-basic-offset: 4 -*- */
%%
headers
#include <Python.h>
#include "pygobject.h"

#include "override_common.h"

#include <evo-environment.h>
#include <evo-contact.h>
#include <evo-addressbook.h>

static PyObject *
wrap_glist_of_evo_locations(GList *locations)
{
	PyObject *result;
	int i;

	if ((result = PyList_New (g_list_length (locations))) == NULL)
		return NULL;

	i = 0;
	for (; locations != NULL; locations = locations->next) {
		evo_location_t *path = (evo_location_t *) locations->data;
		PyObject *t = PyTuple_New (2);
		if (path->name == NULL) {
			Py_INCREF (Py_None);
			PyTuple_SET_ITEM (t, 0, Py_None);
		} else {
			PyTuple_SET_ITEM (t, 0, PyString_FromString(path->name));
		}
		
		if (path->uri == NULL) {
			Py_INCREF (Py_None);
			PyTuple_SET_ITEM (t, 1, Py_None);
		} else {
			PyTuple_SET_ITEM (t, 1, PyString_FromString(path->uri));
		}

		PyList_SET_ITEM (result, i, t);
		i++;
	}
	return result;
}

%%
modulename _evolution
%%
import gobject.GObject as PyGObject_Type  
%%
ignore-glob
	init
	free_*
	*_get_type
%%
override evo_environment_list_calendars kwargs 
static PyObject*
_wrap_evo_environment_list_calendars(PyGObject *self, PyObject *args, PyObject *kwargs) 
{
    return wrap_glist_of_evo_locations(evo_environment_list_calendars());
}
%%
override evo_environment_list_addressbooks kwargs 
static PyObject*
_wrap_evo_environment_list_addressbooks(PyGObject *self, PyObject *args, PyObject *kwargs) 
{
    return wrap_glist_of_evo_locations(evo_environment_list_addressbooks());
}
%%
override evo_environment_list_tasks kwargs 
static PyObject*
_wrap_evo_environment_list_tasks(PyGObject *self, PyObject *args, PyObject *kwargs) 
{
    return wrap_glist_of_evo_locations(evo_environment_list_tasks());
}
%%
override evo_addressbook_open kwargs 
static PyObject*
_wrap_evo_addressbook_open(PyGObject *self, PyObject *args, PyObject *kwargs) 
{
    char *uri;
    EBook *book;
    evo_location_t loc;
    if (!PyArg_ParseTuple(args, "s",&uri))
	{
		return NULL;
	}
    loc.uri = uri;
    book = evo_addressbook_open(&loc);
    return pygobject_new(G_OBJECT(book));
}
%%
override evo_addressbook_get_all_contacts kwargs
static PyObject*
_wrap_evo_addressbook_get_all_contacts(PyGObject *self, PyObject *args, PyObject *kwargs) 
{
    GList *list = evo_addressbook_get_all_contacts(E_BOOK(self->obj));
    return _helper_wrap_gobject_glist(list);
}
